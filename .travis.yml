language: node_js
node_js:
  - 10

env:
  global:
    TF_INPUT=false
    TF_VERSION=0.12.24
    SLS_CI=true
    SLS_DEBUG=*
    AUTH0_SECRET_ID=serverless-todo-vprakash-secret
    ATTACHMENTS_BUCKET=serverless-todo-attachments-vprakash
    ATTACHMENTS_QUEUE=TodoAttachmentsS3Notification
    TODOS_TABLE_NAME=Todos
    TODOS_INDEX_NAME=Todos-UserID-Index
    AWS_ACCOUNT_ID=699472179837
    NODE_OPTIONS=--max-old-space-size=4098

before_install:
  - export WORKING_DIR=$PWD
  - curl -sLo /tmp/terraform.zip https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip
  - unzip /tmp/terraform.zip -d /tmp
  - if [ ! -d ~/bin ]; then mkdir ~/bin; fi
  - mv /tmp/terraform ~/bin
  - export PATH="~/bin:$PATH"
  - python3 -m pip || wget -qO- https://bootstrap.pypa.io/get-pip.py | python3
  - python3 -m pip install --user awscli
  - sudo apt-get install -y jq
  - npm i -g serverless
  - terraform -v
  - serverless --version

install:
  - cd $WORKING_DIR/backend
  - npm ci

script:
  - cd $WORKING_DIR/terraform
  - terraform init -input=false
  - envsubst < files/auth0-secret.json.tmpl > files/auth0-secret.json
  - terraform plan
      -var="env=$ENV"
      -var="auth0SecretId=$AUTH0_SECRET_ID"
      -var="attachmentsBucket=$ATTACHMENTS_BUCKET"
      -var="attachmentsQueue=$ATTACHMENTS_QUEUE"
      -var="todosTableName=$TODOS_TABLE_NAME"
      -var="todosIndexName=$TODOS_INDEX_NAME"
  - terraform apply -input=false -auto-approve
      -var="env=$ENV"
      -var="auth0SecretId=$AUTH0_SECRET_ID"
      -var="attachmentsBucket=$ATTACHMENTS_BUCKET"
      -var="attachmentsQueue=$ATTACHMENTS_QUEUE"
      -var="todosTableName=$TODOS_TABLE_NAME"
      -var="todosIndexName=$TODOS_INDEX_NAME"
  - terraform output -json > outputs.json
  - export AUTH0_SECRET_ARN=$(cat outputs.json | jq '.auth0_secret_arn.value' -r)
  - export AUTH0_KMS_KEY_ARN=$(cat outputs.json | jq '.auth0_kms_key_arn.value' -r)
  - export SQS_QUEUE_URL=$(cat outputs.json | jq '.sqs_queue_url.value' -r)
  - export DYNAMODB_STREAM_ARN=$(cat outputs.json | jq '.dynamodb_stream_arn.value' -r)
  - cd $WORKING_DIR/backend
  - sls deploy -v
      --stage $ENV
      --awsAccountId $AWS_ACCOUNT_ID
      --auth0SecretId $AUTH0_SECRET_ID
      --auth0SecretArn $AUTH0_SECRET_ARN
      --auth0KmsKeyArn $AUTH0_KMS_KEY_ARN
      --todosTableName $TODOS_TABLE_NAME
      --todosIndexName $TODOS_INDEX_NAME
      --attachmentsQueueName $ATTACHMENTS_QUEUE
      --attachmentsBucketName $ATTACHMENTS_BUCKET
      --attachmentsQueueUrl $SQS_QUEUE_URL
      --todoStreamArn $DYNAMODB_STREAM_ARN

jobs:
  include:
    - name: dev
      if: NOT branch = master
      env:
        ENV=dev
    - name: prod
      if: branch = master
      env:
        ENV=dev
